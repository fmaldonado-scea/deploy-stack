{  
   "AWSTemplateFormatVersion":"2010-09-09",
   "Description":"VPC network for DevNet environment",
   "Mappings":{  
      "CoreOSRegionMap" : {
          "us-east-1" : { "AMI" : "ami-39302b2e" },
          "us-west-2" : { "AMI" : "ami-c177c7a1" },
          "us-west-1" : { "AMI" : " ami-4f6f3f2f" },
          "eu-west-1" : { "AMI" : "ami-70694703" }
      }
   },
   "Parameters":{  
      "BastionInstanceType":{  
         "Description":"EC2 HVM instance type for Bastion",
         "Type":"String",
         "Default":"m3.medium",
         "ConstraintDescription":"Must be a valid EC2 HVM instance type."
      },
      "EnvironmentName":{  
         "Description":"The name of the environment.",
         "Type":"String"
      },
      "KeyPair":{  
         "Description":"The name of an EC2 Key Pair to allow SSH access to the instance.",
         "Type":"AWS::EC2::KeyPair::KeyName"
      },
      "NATInstanceAMI":{  
         "Description":"EC2 AMI for the NAT instance",
         "Type":"String",
         "Default":"ami-303b1458",
         "ConstraintDescription":"Must be an AWS NAT Instance AMI"
      },
      "NATInstanceType":{  
         "Description":"EC2 instance type for the NAT instances",
         "Type":"String",
         "Default":"m3.medium",
         "ConstraintDescription":"Must be a valid EC2 HVM instance type."
      },
      "VpcCidrBlock":{  
         "Description":"First three octets to use for the CIDR address range of this Environments VPC",
         "Type":"String",
         "Default":"10.111.10",
         "MinLength":"5",
         "MaxLength":"11",
         "AllowedPattern":"(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})",
         "ConstraintDescription":"must be dot separated prefix in the form x.y.z"
      }
   },
   "Resources":{  
      "EnvironmentVPC":{  
         "Type":"AWS::EC2::VPC",
         "Properties":{  
            "CidrBlock":{  
               "Fn::Join":[  
                  ".",
                  [  
                     {  
                        "Ref":"VpcCidrBlock"
                     },
                     "0/24"
                  ]
               ]
            },
            "EnableDnsSupport":"true",
            "EnableDnsHostnames":"true",
            "InstanceTenancy":"default",
            "Tags":[  
               {  
                  "Key":"Environment",
                  "Value":{  
                     "Ref":"EnvironmentName"
                  }
               },
               {  
                  "Key":"Name",
                  "Value":{  
                     "Ref":"EnvironmentName"
                  }
               }
            ]
         }
      },
      "AppSubnetA":{  
         "Type":"AWS::EC2::Subnet",
         "Properties":{  
            "VpcId":{  
               "Ref":"EnvironmentVPC"
            },
            "CidrBlock":{  
               "Fn::Join":[  
                  ".",
                  [  
                     {  
                        "Ref":"VpcCidrBlock"
                     },
                     "96/27"
                  ]
               ]
            },
            "AvailabilityZone":"us-east-1b",
            "Tags":[  
               {  
                  "Key":"Name",
                  "Value":{  
                     "Fn::Join":[  
                        "-",
                        [  
                           {  
                              "Ref":"EnvironmentName"
                           },
                           "app-subnet-a"
                        ]
                     ]
                  }
               },
               {  
                  "Key":"Environment",
                  "Value":{  
                     "Ref":"EnvironmentName"
                  }
               },
               {  
                  "Key":"Application",
                  "Value":{  
                     "Ref":"AWS::StackId"
                  }
               },
               {  
                  "Key":"Network",
                  "Value":"Public"
               }
            ]
         }
      },
      "AppSubnetB":{  
         "Type":"AWS::EC2::Subnet",
         "Properties":{  
            "VpcId":{  
               "Ref":"EnvironmentVPC"
            },
            "CidrBlock":{  
               "Fn::Join":[  
                  ".",
                  [  
                     {  
                        "Ref":"VpcCidrBlock"
                     },
                     "128/27"
                  ]
               ]
            },
            "AvailabilityZone":"us-east-1c",
            "Tags":[  
               {  
                  "Key":"Name",
                  "Value":{  
                     "Fn::Join":[  
                        "-",
                        [  
                           {  
                              "Ref":"EnvironmentName"
                           },
                           "app-subnet-b"
                        ]
                     ]
                  }
               },
               {  
                  "Key":"Environment",
                  "Value":{  
                     "Ref":"EnvironmentName"
                  }
               },
               {  
                  "Key":"Application",
                  "Value":{  
                     "Ref":"AWS::StackId"
                  }
               },
               {  
                  "Key":"Network",
                  "Value":"Public"
               }
            ]
         }
      },
      "AppSubnetC":{  
         "Type":"AWS::EC2::Subnet",
         "Properties":{  
            "VpcId":{  
               "Ref":"EnvironmentVPC"
            },
            "CidrBlock":{  
               "Fn::Join":[  
                  ".",
                  [  
                     {  
                        "Ref":"VpcCidrBlock"
                     },
                     "160/27"
                  ]
               ]
            },
            "AvailabilityZone":"us-east-1d",
            "Tags":[  
               {  
                  "Key":"Name",
                  "Value":{  
                     "Fn::Join":[  
                        "-",
                        [  
                           {  
                              "Ref":"EnvironmentName"
                           },
                           "app-subnet-c"
                        ]
                     ]
                  }
               },
               {  
                  "Key":"Application",
                  "Value":{  
                     "Ref":"AWS::StackId"
                  }
               },
               {  
                  "Key":"Environment",
                  "Value":{  
                     "Ref":"EnvironmentName"
                  }
               },
               {  
                  "Key":"Network",
                  "Value":"Public"
               }
            ]
         }
      },
      "BorderSubnetA":{  
         "Type":"AWS::EC2::Subnet",
         "Properties":{  
            "VpcId":{  
               "Ref":"EnvironmentVPC"
            },
            "CidrBlock":{  
               "Fn::Join":[  
                  ".",
                  [  
                     {  
                        "Ref":"VpcCidrBlock"
                     },
                     "0/27"
                  ]
               ]
            },
            "AvailabilityZone":"us-east-1b",
            "MapPublicIpOnLaunch":"true",
            "Tags":[  
               {  
                  "Key":"Name",
                  "Value":{  
                     "Fn::Join":[  
                        "-",
                        [  
                           {  
                              "Ref":"EnvironmentName"
                           },
                           "border-subnet-a"
                        ]
                     ]
                  }
               },
               {  
                  "Key":"Application",
                  "Value":{  
                     "Ref":"AWS::StackId"
                  }
               },
               {  
                  "Key":"Environment",
                  "Value":{  
                     "Ref":"EnvironmentName"
                  }
               },
               {  
                  "Key":"Network",
                  "Value":"Public"
               }
            ]
         }
      },
      "BorderSubnetB":{  
         "Type":"AWS::EC2::Subnet",
         "Properties":{  
            "VpcId":{  
               "Ref":"EnvironmentVPC"
            },
            "CidrBlock":{  
               "Fn::Join":[  
                  ".",
                  [  
                     {  
                        "Ref":"VpcCidrBlock"
                     },
                     "32/27"
                  ]
               ]
            },
            "AvailabilityZone":"us-east-1c",
            "MapPublicIpOnLaunch":"true",
            "Tags":[  
               {  
                  "Key":"Name",
                  "Value":{  
                     "Fn::Join":[  
                        "-",
                        [  
                           {  
                              "Ref":"EnvironmentName"
                           },
                           "border-subnet-b"
                        ]
                     ]
                  }
               },
               {  
                  "Key":"Application",
                  "Value":{  
                     "Ref":"AWS::StackId"
                  }
               },
               {  
                  "Key":"Environment",
                  "Value":{  
                     "Ref":"EnvironmentName"
                  }
               },
               {  
                  "Key":"Network",
                  "Value":"Public"
               }
            ]
         }
      },
      "BorderSubnetC":{  
         "Type":"AWS::EC2::Subnet",
         "Properties":{  
            "VpcId":{  
               "Ref":"EnvironmentVPC"
            },
            "CidrBlock":{  
               "Fn::Join":[  
                  ".",
                  [  
                     {  
                        "Ref":"VpcCidrBlock"
                     },
                     "64/27"
                  ]
               ]
            },
            "AvailabilityZone":"us-east-1d",
            "MapPublicIpOnLaunch":"true",
            "Tags":[  
               {  
                  "Key":"Name",
                  "Value":{  
                     "Fn::Join":[  
                        "-",
                        [  
                           {  
                              "Ref":"EnvironmentName"
                           },
                           "border-subnet-c"
                        ]
                     ]
                  }
               },
               {  
                  "Key":"Application",
                  "Value":{  
                     "Ref":"AWS::StackId"
                  }
               },
               {  
                  "Key":"Environment",
                  "Value":{  
                     "Ref":"EnvironmentName"
                  }
               },
               {  
                  "Key":"Network",
                  "Value":"Public"
               }
            ]
         }
      },
      "DBSubnetA":{  
         "Type":"AWS::EC2::Subnet",
         "Properties":{  
            "VpcId":{  
               "Ref":"EnvironmentVPC"
            },
            "CidrBlock":{  
               "Fn::Join":[  
                  ".",
                  [  
                     {  
                        "Ref":"VpcCidrBlock"
                     },
                     "192/28"
                  ]
               ]
            },
            "AvailabilityZone":"us-east-1b",
            "Tags":[  
               {  
                  "Key":"Name",
                  "Value":{  
                     "Fn::Join":[  
                        "-",
                        [  
                           {  
                              "Ref":"EnvironmentName"
                           },
                           "db-subnet-a"
                        ]
                     ]
                  }
               },
               {  
                  "Key":"Environment",
                  "Value":{  
                     "Ref":"EnvironmentName"
                  }
               },
               {  
                  "Key":"Application",
                  "Value":{  
                     "Ref":"AWS::StackId"
                  }
               },
               {  
                  "Key":"Environment",
                  "Value":{  
                     "Ref":"EnvironmentName"
                  }
               },
               {  
                  "Key":"Network",
                  "Value":"Private"
               }
            ]
         }
      },
      "DBSubnetB":{  
         "Type":"AWS::EC2::Subnet",
         "Properties":{  
            "VpcId":{  
               "Ref":"EnvironmentVPC"
            },
            "CidrBlock":{  
               "Fn::Join":[  
                  ".",
                  [  
                     {  
                        "Ref":"VpcCidrBlock"
                     },
                     "208/28"
                  ]
               ]
            },
            "AvailabilityZone":"us-east-1c",
            "Tags":[  
               {  
                  "Key":"Name",
                  "Value":{  
                     "Fn::Join":[  
                        "-",
                        [  
                           {  
                              "Ref":"EnvironmentName"
                           },
                           "db-subnet-b"
                        ]
                     ]
                  }
               },
               {  
                  "Key":"Environment",
                  "Value":{  
                     "Ref":"EnvironmentName"
                  }
               },
               {  
                  "Key":"Application",
                  "Value":{  
                     "Ref":"AWS::StackId"
                  }
               },
               {  
                  "Key":"Network",
                  "Value":"Private"
               }
            ]
         }
      },
      "DBSubnetC":{  
         "Type":"AWS::EC2::Subnet",
         "Properties":{  
            "VpcId":{  
               "Ref":"EnvironmentVPC"
            },
            "CidrBlock":{  
               "Fn::Join":[  
                  ".",
                  [  
                     {  
                        "Ref":"VpcCidrBlock"
                     },
                     "224/28"
                  ]
               ]
            },
            "AvailabilityZone":"us-east-1d",
            "Tags":[  
               {  
                  "Key":"Name",
                  "Value":{  
                     "Fn::Join":[  
                        "-",
                        [  
                           {  
                              "Ref":"EnvironmentName"
                           },
                           "db-subnet-c"
                        ]
                     ]
                  }
               },
               {  
                  "Key":"Environment",
                  "Value":{  
                     "Ref":"EnvironmentName"
                  }
               },
               {  
                  "Key":"Application",
                  "Value":{  
                     "Ref":"AWS::StackId"
                  }
               },
               {  
                  "Key":"Network",
                  "Value":"Private"
               }
            ]
         }
      },
      "ServiceSubnet":{  
         "Type":"AWS::EC2::Subnet",
         "Properties":{  
            "VpcId":{  
               "Ref":"EnvironmentVPC"
            },
            "CidrBlock":{  
               "Fn::Join":[  
                  ".",
                  [  
                     {  
                        "Ref":"VpcCidrBlock"
                     },
                     "240/28"
                  ]
               ]
            },
            "AvailabilityZone":"us-east-1d",
            "Tags":[  
               {  
                  "Key":"Name",
                  "Value":{  
                     "Fn::Join":[  
                        "-",
                        [  
                           {  
                              "Ref":"EnvironmentName"
                           },
                           "service-subnet"
                        ]
                     ]
                  }
               },
               {  
                  "Key":"Environment",
                  "Value":{  
                     "Ref":"EnvironmentName"
                  }
               },
               {  
                  "Key":"Application",
                  "Value":{  
                     "Ref":"AWS::StackId"
                  }
               },
               {  
                  "Key":"Network",
                  "Value":"Public"
               }
            ]
         }
      },
      "AttachGateway":{  
         "Type":"AWS::EC2::VPCGatewayAttachment",
         "Properties":{  
            "VpcId":{  
               "Ref":"EnvironmentVPC"
            },
            "InternetGatewayId":{  
               "Ref":"InternetGateway"
            }
         }
      },
      "InternetGateway":{  
         "Type":"AWS::EC2::InternetGateway",
         "Properties":{  
            "Tags":[  
               {  
                  "Key":"Application",
                  "Value":{  
                     "Ref":"AWS::StackId"
                  }
               },
               {  
                  "Key":"Environment",
                  "Value":{  
                     "Ref":"EnvironmentName"
                  }
               },
               {  
                  "Key":"Network",
                  "Value":"Public"
               }
            ]
         }
      },
      "PrivateRouteTable":{  
         "Type":"AWS::EC2::RouteTable",
         "Properties":{  
            "VpcId":{  
               "Ref":"EnvironmentVPC"
            },
            "Tags":[  
               {  
                  "Key":"Application",
                  "Value":{  
                     "Ref":"AWS::StackId"
                  }
               },
               {  
                  "Key":"Environment",
                  "Value":{  
                     "Ref":"EnvironmentName"
                  }
               },
               {  
                  "Key":"Network",
                  "Value":"Private"
               }
            ]
         }
      },
      "PublicRouteTable":{  
         "Type":"AWS::EC2::RouteTable",
         "Properties":{  
            "VpcId":{  
               "Ref":"EnvironmentVPC"
            },
            "Tags":[  
               {  
                  "Key":"Application",
                  "Value":{  
                     "Ref":"AWS::StackId"
                  }
               },
               {  
                  "Key":"Environment",
                  "Value":{  
                     "Ref":"EnvironmentName"
                  }
               },
               {  
                  "Key":"Network",
                  "Value":"Public"
               }
            ]
         }
      },
      "PublicRoute":{  
         "Type":"AWS::EC2::Route",
         "DependsOn":"AttachGateway",
         "Properties":{  
            "RouteTableId":{  
               "Ref":"PublicRouteTable"
            },
            "DestinationCidrBlock":"0.0.0.0/0",
            "GatewayId":{  
               "Ref":"InternetGateway"
            }
         }
      },
      "NATRoute":{  
         "Type":"AWS::EC2::Route",
         "Properties":{  
            "RouteTableId":{  
               "Ref":"PrivateRouteTable"
            },
            "DestinationCidrBlock":"0.0.0.0/0",
            "InstanceId":{  
               "Ref":"NATInstance"
            }
         }
      },
      "AppASubnetRouteTableAssociation":{  
         "Type":"AWS::EC2::SubnetRouteTableAssociation",
         "Properties":{  
            "SubnetId":{  
               "Ref":"AppSubnetA"
            },
            "RouteTableId":{  
               "Ref":"PrivateRouteTable"
            }
         }
      },
      "AppBSubnetRouteTableAssociation":{  
         "Type":"AWS::EC2::SubnetRouteTableAssociation",
         "Properties":{  
            "SubnetId":{  
               "Ref":"AppSubnetB"
            },
            "RouteTableId":{  
               "Ref":"PrivateRouteTable"
            }
         }
      },
      "AppCSubnetRouteTableAssociation":{  
         "Type":"AWS::EC2::SubnetRouteTableAssociation",
         "Properties":{  
            "SubnetId":{  
               "Ref":"AppSubnetC"
            },
            "RouteTableId":{  
               "Ref":"PrivateRouteTable"
            }
         }
      },
      "BorderSubnetARouteTableAssociation":{  
         "Type":"AWS::EC2::SubnetRouteTableAssociation",
         "Properties":{  
            "SubnetId":{  
               "Ref":"BorderSubnetA"
            },
            "RouteTableId":{  
               "Ref":"PublicRouteTable"
            }
         }
      },
      "BorderSubnetBRouteTableAssociation":{  
         "Type":"AWS::EC2::SubnetRouteTableAssociation",
         "Properties":{  
            "SubnetId":{  
               "Ref":"BorderSubnetB"
            },
            "RouteTableId":{  
               "Ref":"PublicRouteTable"
            }
         }
      },
      "BorderSubnetCRouteTableAssociation":{  
         "Type":"AWS::EC2::SubnetRouteTableAssociation",
         "Properties":{  
            "SubnetId":{  
               "Ref":"BorderSubnetC"
            },
            "RouteTableId":{  
               "Ref":"PublicRouteTable"
            }
         }
      },
      "DBSubnetARouteTableAssociation":{  
         "Type":"AWS::EC2::SubnetRouteTableAssociation",
         "Properties":{  
            "SubnetId":{  
               "Ref":"DBSubnetA"
            },
            "RouteTableId":{  
               "Ref":"PrivateRouteTable"
            }
         }
      },
      "DBSubnetBRouteTableAssociation":{  
         "Type":"AWS::EC2::SubnetRouteTableAssociation",
         "Properties":{  
            "SubnetId":{  
               "Ref":"DBSubnetB"
            },
            "RouteTableId":{  
               "Ref":"PrivateRouteTable"
            }
         }
      },
      "DBSubnetCRouteTableAssociation":{  
         "Type":"AWS::EC2::SubnetRouteTableAssociation",
         "Properties":{  
            "SubnetId":{  
               "Ref":"DBSubnetC"
            },
            "RouteTableId":{  
               "Ref":"PrivateRouteTable"
            }
         }
      },
      "ServiceSubnetARouteTableAssociation":{  
         "Type":"AWS::EC2::SubnetRouteTableAssociation",
         "Properties":{  
            "SubnetId":{  
               "Ref":"ServiceSubnet"
            },
            "RouteTableId":{  
               "Ref":"PublicRouteTable"
            }
         }
      },
      "NATIP":{  
         "Type":"AWS::EC2::EIP",
         "Properties":{  
            "Domain":"vpc",
            "InstanceId":{  
               "Ref":"NATInstance"
            }
         }
      },
      "AdminSecurityGroup":{  
         "Type":"AWS::EC2::SecurityGroup",
         "Properties":{  
            "GroupDescription":"Bastion Host Security Group",
            "VpcId":{  
               "Ref":"EnvironmentVPC"
            },
            "SecurityGroupIngress":[  
               {  
                  "IpProtocol":"tcp",
                  "FromPort":"22",
                  "ToPort":"22",
                  "CidrIp":"64.211.224.254/32"
               }
            ],
            "Tags":[  
               {  
                  "Key":"Name",
                  "Value":{  
                     "Fn::Join":[  
                        "-",
                        [  
                           {  
                              "Ref":"EnvironmentName"
                           },
                           "admin-allow"
                        ]
                     ]
                  }
               },
               {  
                  "Key":"Environment",
                  "Value":{  
                     "Ref":"EnvironmentName"
                  }
               }
            ]
         }
      },
      "DevnetSecurityGroup": {
        "Type": "AWS::EC2::SecurityGroup",
        "Properties": {
          "GroupDescription": "Devnet SecurityGroup",
          "VpcId" : { "Ref" : "EnvironmentVPC" },
          "SecurityGroupIngress": [
            {"IpProtocol": "tcp", "FromPort": "22", "ToPort": "22", "SourceSecurityGroupId": {"Ref" : "AdminSecurityGroup"}},
            {"IpProtocol": "icmp", "FromPort": "-1", "ToPort": "-1", "SourceSecurityGroupId": {"Ref" : "AdminSecurityGroup"}}
          ],
          "Tags" : [
            {"Key" : "Environment", "Value" : {"Ref": "EnvironmentName"}},
            { "Key" : "Name", "Value" : {"Fn::Join" : [ "-", [{ "Ref": "EnvironmentName"},"devnet-allow"]]}}
          ]
        }
      },
      "ETCDSecurityGroup": {
        "Type": "AWS::EC2::SecurityGroup",
        "Properties": {
          "GroupDescription": "Etcd SecurityGroup",
          "VpcId" : { "Ref" : "EnvironmentVPC" },
          "SecurityGroupIngress": [
            {"IpProtocol": "tcp", "FromPort": "22", "ToPort": "22", "SourceSecurityGroupId": {"Ref": "AdminSecurityGroup"}},
            {"IpProtocol": "tcp", "FromPort": "2379", "ToPort": "2379", "CidrIp": {"Fn::Join" : [ ".", [{ "Ref": "VpcCidrBlock"}, "0/24"]]}},
            {"IpProtocol": "icmp", "FromPort": "-1", "ToPort": "-1", "SourceSecurityGroupId": {"Ref": "AdminSecurityGroup"}}
          ],
          "Tags" : [
            { "Key" : "Name", "Value" : {"Fn::Join" : [ "-", [{"Ref": "EnvironmentName"},"etcd-allow"]]}},
            { "Key" : "Environment", "Value" : {"Ref": "EnvironmentName"}}
          ]
        }
      },
      "FluentdSecurityGroup": {
        "Type": "AWS::EC2::SecurityGroup",
        "Properties": {
          "GroupDescription": "Fluentd SecurityGroup",
          "VpcId" : { "Ref" : "EnvironmentVPC" },
          "SecurityGroupIngress": [
            {"IpProtocol": "tcp", "FromPort": "514", "ToPort": "514", "CidrIp": {"Fn::Join" : [ ".", [{ "Ref": "VpcCidrBlock"}, "0/24"]]}},
            {"IpProtocol": "udp", "FromPort": "514", "ToPort": "514", "CidrIp": {"Fn::Join" : [ ".", [{ "Ref": "VpcCidrBlock"}, "0/24"]]}},
            {"IpProtocol": "tcp", "FromPort": "24224", "ToPort": "24224", "CidrIp": {"Fn::Join" : [ ".", [{ "Ref": "VpcCidrBlock"}, "0/24"]]}},
            {"IpProtocol": "tcp", "FromPort": "22", "ToPort": "22", "SourceSecurityGroupId": {"Ref": "AdminSecurityGroup"}}
          ],
          "Tags" : [
            { "Key" : "Name", "Value" : {"Fn::Join" : [ "-", [{"Ref" : "EnvironmentName"},"fluentd-allow"]]}},
            { "Key" : "Environment", "Value" : { "Ref": "EnvironmentName"}}
          ]
        }
      },
      "MemcachedSecurityGroup": {
        "Type": "AWS::EC2::SecurityGroup",
        "Properties": {
          "GroupDescription": "Memcached SecurityGroup",
          "VpcId" : { "Ref" : "EnvironmentVPC" },
          "SecurityGroupIngress": [
            {"IpProtocol": "tcp", "FromPort": "22", "ToPort": "22", "SourceSecurityGroupId": {"Ref" : "AdminSecurityGroup"}},
            {"IpProtocol": "icmp", "FromPort": "-1", "ToPort": "-1", "SourceSecurityGroupId": {"Ref" : "AdminSecurityGroup"}}
          ],
          "Tags" : [
            {"Key" : "Environment", "Value" : {"Ref": "EnvironmentName"}},
            { "Key" : "Name", "Value" : {"Fn::Join" : [ "-", [{ "Ref": "EnvironmentName"},"memcached-allow"]]}}
          ]
        }
      },
      "NATSecurityGroup":{  
         "Properties":{  
            "GroupDescription":"Security group for NAT host.",
            "VpcId":{  
               "Ref":"EnvironmentVPC"
            },
            "SecurityGroupIngress":[  
               {  
                  "IpProtocol":"tcp",
                  "FromPort":"1",
                  "ToPort":"65535",
                  "SourceSecurityGroupId":{  
                     "Fn::GetAtt":[  
                        "AdminSecurityGroup",
                        "GroupId"
                     ]
                  }
               },
               {  
                  "IpProtocol":"udp",
                  "FromPort":"1",
                  "ToPort":"65535",
                  "SourceSecurityGroupId":{  
                     "Fn::GetAtt":[  
                        "AdminSecurityGroup",
                        "GroupId"
                     ]
                  }
               },
               {  
                  "IpProtocol":"icmp",
                  "FromPort":"-1",
                  "ToPort":"-1",
                  "SourceSecurityGroupId":{  
                     "Fn::GetAtt":[  
                        "AdminSecurityGroup",
                        "GroupId"
                     ]
                  }
               }
            ],
            "Tags":[  
               {  
                  "Key":"Name",
                  "Value":{  
                     "Fn::Join":[  
                        "-",
                        [  
                           {  
                              "Ref":"EnvironmentName"
                           },
                           "nat-allow"
                        ]
                     ]
                  }
               },
               {  
                  "Key":"Environment",
                  "Value":{  
                     "Ref":"EnvironmentName"
                  }
               }
            ]
         },
         "Type":"AWS::EC2::SecurityGroup"
      },
      "PostgresSecurityGroup": {
        "Type": "AWS::EC2::SecurityGroup",
        "Properties": {
          "GroupDescription": "Postgres SecurityGroup",
          "VpcId" : { "Ref" : "EnvironmentVPC" },
          "SecurityGroupIngress": [
            {"IpProtocol": "tcp", "FromPort": "22", "ToPort": "22", "SourceSecurityGroupId": {"Ref" : "AdminSecurityGroup"}},
            {"IpProtocol": "tcp", "FromPort": "24224", "ToPort": "24224", "SourceSecurityGroupId": {"Ref" : "FluentdSecurityGroup"}},
            {"IpProtocol": "icmp", "FromPort": "-1", "ToPort": "-1", "SourceSecurityGroupId": {"Ref" : "AdminSecurityGroup"}}
          ],
          "Tags" : [
            {"Key" : "Environment", "Value" : {"Ref": "EnvironmentName"}},
            { "Key" : "Name", "Value" : {"Fn::Join" : [ "-", [{ "Ref": "EnvironmentName"},"postgres-allow"]]}}
          ]
        }
      },
      "NatDNSIngress":{  
         "Properties":{  
            "CidrIp":{  
               "Fn::Join":[  
                  ".",
                  [  
                     {  
                        "Ref":"VpcCidrBlock"
                     },
                     "0/24"
                  ]
               ]
            },
            "FromPort":"53",
            "GroupId":{  
               "Ref":"NATSecurityGroup"
            },
            "IpProtocol":"udp",
            "ToPort":"53"
         },
         "Type":"AWS::EC2::SecurityGroupIngress"
      },
      "NatHTTPIngress":{  
         "Properties":{  
            "CidrIp":{  
               "Fn::Join":[  
                  ".",
                  [  
                     {  
                        "Ref":"VpcCidrBlock"
                     },
                     "0/24"
                  ]
               ]
            },
            "FromPort":"80",
            "GroupId":{  
               "Ref":"NATSecurityGroup"
            },
            "IpProtocol":"tcp",
            "ToPort":"80"
         },
         "Type":"AWS::EC2::SecurityGroupIngress"
      },
      "NatHTTPSIngress":{  
         "Properties":{  
            "CidrIp":{  
               "Fn::Join":[  
                  ".",
                  [  
                     {  
                        "Ref":"VpcCidrBlock"
                     },
                     "0/24"
                  ]
               ]
            },
            "FromPort":"443",
            "GroupId":{  
               "Ref":"NATSecurityGroup"
            },
            "IpProtocol":"tcp",
            "ToPort":"443"
         },
         "Type":"AWS::EC2::SecurityGroupIngress"
      },
      "NatICMPIngress":{  
         "Properties":{  
            "CidrIp":{  
               "Fn::Join":[  
                  ".",
                  [  
                     {  
                        "Ref":"VpcCidrBlock"
                     },
                     "0/24"
                  ]
               ]
            },
            "FromPort":"-1",
            "GroupId":{  
               "Ref":"NATSecurityGroup"
            },
            "IpProtocol":"icmp",
            "ToPort":"-1"
         },
         "Type":"AWS::EC2::SecurityGroupIngress"
      },
      "NatNTPIngress":{  
         "Properties":{  
            "CidrIp":{  
               "Fn::Join":[  
                  ".",
                  [  
                     {  
                        "Ref":"VpcCidrBlock"
                     },
                     "0/24"
                  ]
               ]
            },
            "FromPort":"123",
            "GroupId":{  
               "Ref":"NATSecurityGroup"
            },
            "IpProtocol":"udp",
            "ToPort":"123"
         },
         "Type":"AWS::EC2::SecurityGroupIngress"
      },
      "NatETCDIngress":{  
         "Properties":{  
            "CidrIp":{  
               "Fn::Join":[  
                  ".",
                  [  
                     {  
                        "Ref":"VpcCidrBlock"
                     },
                     "0/24"
                  ]
               ]
            },
            "FromPort":"2379",
            "GroupId":{  
               "Ref":"NATSecurityGroup"
            },
            "IpProtocol":"tcp",
            "ToPort":"2379"
         },
         "Type":"AWS::EC2::SecurityGroupIngress"
      },
      "NatFluentdIngress":{  
         "Properties":{  
            "CidrIp":{  
               "Fn::Join":[  
                  ".",
                  [  
                     {  
                        "Ref":"VpcCidrBlock"
                     },
                     "0/24"
                  ]
               ]
            },
            "FromPort":"24224",
            "GroupId":{  
               "Ref":"NATSecurityGroup"
            },
            "IpProtocol":"tcp",
            "ToPort":"24224"
         },
         "Type":"AWS::EC2::SecurityGroupIngress"
      },
      "ETCDRoute53": {
        "Type": "AWS::Route53::HostedZone",
        "Properties": {
          "Name": "example.com.",
          "VPCs": [
            {"VPCId": {"Ref": "EnvironmentVPC"},
            "VPCRegion": {"Ref" : "AWS::Region"}
            }
          ],
          "HostedZoneTags" : [
            {"Key": "Environment", "Value": {"Ref": "EnvironmentName"}},
            {"Key": "Name", "Value": {"Fn::Join" : [ "-", [{"Ref": "EnvironmentName"},"etcd-dns"]]}}
          ]
        }
      },
      "BastionHost":{  
         "Type":"AWS::EC2::Instance",
         "Metadata":{  
            "Comment":"Environment Bastion Host"
         },
         "Properties":{  
            "ImageId":{  
               "Fn::FindInMap":[  
                  "CoreOSRegionMap",
                  {  
                     "Ref":"AWS::Region"
                  },
                  "AMI"
               ]
            },
            "SubnetId":{  
               "Ref":"BorderSubnetA"
            },
            "KeyName":{  
               "Ref":"KeyPair"
            },
            "InstanceType":{  
               "Ref":"BastionInstanceType"
            },
            "SecurityGroupIds":[  
               {  
                  "Ref":"AdminSecurityGroup"
               }
            ],
            "UserData":{  
               "Fn::Base64":""
            },
            "Tags":[  
               {  
                  "Key":"Name",
                  "Value":{  
                     "Fn::Join":[  
                        "-",
                        [  
                           {  
                              "Ref":"EnvironmentName"
                           },
                           "bastion"
                        ]
                     ]
                  }
               },
               {  
                  "Key":"Environment",
                  "Value":{  
                     "Ref":"EnvironmentName"
                  }
               },
               {  
                  "Key":"Application",
                  "Value":"bastion"
               }
            ]
         }
      },
      "NATInstance":{  
         "Type":"AWS::EC2::Instance",
         "Metadata":{  
            "Comment":"Environment NAT Host"
         },
         "Properties":{  
            "ImageId":{  
               "Fn::FindInMap":[  
                  "CoreOSRegionMap",
                  {  
                     "Ref":"AWS::Region"
                  },
                  "AMI"
               ]
            },
            "SubnetId":{  
               "Ref":"BorderSubnetB"
            },
            "KeyName":{  
               "Ref":"KeyPair"
            },
            "InstanceType":{  
               "Ref":"NATInstanceType"
            },
            "SecurityGroupIds":[  
               {  
                  "Ref":"AdminSecurityGroup"
               },
               {  
                  "Ref":"NATSecurityGroup"
               }
            ],
            "SourceDestCheck":"false",
            "UserData":{  
               "Fn::Base64":""
            },
            "Tags":[  
               {  
                  "Key":"Name",
                  "Value":{  
                     "Fn::Join":[  
                        "-",
                        [  
                           {  
                              "Ref":"EnvironmentName"
                           },
                           "nat"
                        ]
                     ]
                  }
               },
               {  
                  "Key":"Environment",
                  "Value":{  
                     "Ref":"EnvironmentName"
                  }
               },
               {  
                  "Key":"Application",
                  "Value":"nat"
               }
            ]
         }
      }
   },
   "Outputs":{  
      "AdminSecurityGroupParameter":{  
         "Value":{  
            "Ref":"AdminSecurityGroup"
         },
         "Export":{ 
            "Name" : {"Fn::Sub": "${AWS::StackName}-AdminSecurityGroup" }
         }
      },
      "AppSubnetAParameter":{  
         "Value":{  
            "Ref":"AppSubnetA"
         },
         "Export":{ 
            "Name" : {"Fn::Sub": "${AWS::StackName}-AppSubnetA" }
         }
      },
      "AppSubnetBParameter":{  
         "Value":{  
            "Ref":"AppSubnetB"
         },
         "Export":{ 
            "Name" : {"Fn::Sub": "${AWS::StackName}-AppSubnetB" }
         }
      },
      "AppSubnetCParameter":{  
         "Value":{  
            "Ref":"AppSubnetC"
         },
         "Export":{ 
            "Name" : {"Fn::Sub": "${AWS::StackName}-AppSubnetC" }
         }
      },
      "BastionPublicDnsName":{  
         "Value":{  
            "Fn::GetAtt":[  
               "BastionHost",
               "PublicDnsName"
            ]
         }
      },
      "BastionPublicIp":{  
         "Value":{  
            "Fn::GetAtt":[  
               "BastionHost",
               "PublicIp"
            ]
         }
      },
      "BorderSubnetAParameter":{  
         "Value":{  
            "Ref":"BorderSubnetA"
         },
         "Export":{ 
            "Name" : {"Fn::Sub": "${AWS::StackName}-BorderSubnetA" }
         }
      },
      "BorderSubnetBParameter":{  
         "Value":{  
            "Ref":"BorderSubnetB"
         },
         "Export":{ 
            "Name" : {"Fn::Sub": "${AWS::StackName}-BorderSubnetB" }
         }
      },
      "BorderSubnetCParameter":{  
         "Value":{  
            "Ref":"BorderSubnetC"
         },
         "Export":{ 
            "Name" : {"Fn::Sub": "${AWS::StackName}-BorderSubnetC" }
         }
      },
      "DBSubnetAParameter":{  
         "Value":{  
            "Ref":"DBSubnetA"
         },
         "Export":{ 
            "Name" : {"Fn::Sub": "${AWS::StackName}-DBSubnetA" }
         }
      },
      "DBSubnetBParameter":{  
         "Value":{  
            "Ref":"DBSubnetB"
         },
         "Export":{ 
            "Name" : {"Fn::Sub": "${AWS::StackName}-DBSubnetB" }
         }
      },
      "DBSubnetCParameter":{  
         "Value":{  
            "Ref":"DBSubnetC"
         },
         "Export":{ 
            "Name" : {"Fn::Sub": "${AWS::StackName}-DBSubnetC" }
         }
      },
      "DevnetSecurityGroupParameter":{  
         "Value":{  
            "Ref":"DevnetSecurityGroup"
         },
         "Export":{ 
            "Name" : {"Fn::Sub": "${AWS::StackName}-DevnetSecurityGroup" }
         }
      },
      "Environment":{  
         "Value":{  
            "Ref":"EnvironmentName"
         },
         "Export":{ 
            "Name" : {"Fn::Sub": "${AWS::StackName}-Environment" }
         }
      },
      "ETCDRoute53Parameter":{  
         "Value":{  
            "Ref":"ETCDRoute53"
         },
         "Export":{ 
            "Name" : {"Fn::Sub": "${AWS::StackName}-ETCDRoute53" }
         }
      },
      "ETCDSecurityGroupParameter":{  
         "Value":{  
            "Ref":"ETCDSecurityGroup"
         },
         "Export":{ 
            "Name" : {"Fn::Sub": "${AWS::StackName}-ETCDSecurityGroup" }
         }
      },
      "FluentdSecurityGroupParameter":{  
         "Value":{  
            "Ref":"FluentdSecurityGroup"
         },
         "Export":{ 
            "Name" : {"Fn::Sub": "${AWS::StackName}-FluentdSecurityGroup" }
         }
      },
      "MemcachedSecurityGroupParameter":{  
         "Value":{  
            "Ref":"MemcachedSecurityGroup"
         },
         "Export":{ 
            "Name" : {"Fn::Sub": "${AWS::StackName}-MemcachedSecurityGroup" }
         }
      },
      "NATInstanceIpParameter":{  
         "Value":{  
            "Ref":"NATIP"
         },
         "Export":{ 
            "Name" : {"Fn::Sub": "${AWS::StackName}-NatIp" }
         }
      },
      "NATSecurityGroupParameter":{  
         "Value":{  
            "Ref":"MemcachedSecurityGroup"
         },
         "Export":{ 
            "Name" : {"Fn::Sub": "${AWS::StackName}-NATSecurityGroup" }
         }
      },
      "PostresSecurityGroupParameter":{  
         "Value":{  
            "Ref":"PostgresSecurityGroup"
         },
         "Export":{ 
            "Name" : {"Fn::Sub": "${AWS::StackName}-PostgresSecurityGroup" }
         }
      },
      "VpcCidrRangeParameter":{  
         "Value":{  
               "Fn::Join":[  
                  ".",
                  [  
                     {  
                        "Ref":"VpcCidrBlock"
                     },
                     "0/24"
                  ]
               ]
            },
         "Export":{ 
            "Name" : {"Fn::Sub": "${AWS::StackName}-VpcCidrRange" }
         }
      },
      "VpcIdParameter":{  
         "Value":{  
            "Ref":"EnvironmentVPC"
         },
         "Export":{ 
            "Name" : {"Fn::Sub": "${AWS::StackName}-VpcId" }
         }
      }
   }
}